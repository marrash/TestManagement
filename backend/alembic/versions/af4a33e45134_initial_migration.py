"""Initial migration

Revision ID: af4a33e45134
Revises: 
Create Date: 2025-03-19 16:32:17.947406

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af4a33e45134'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('prerequisites', sa.Text(), nullable=True),
    sa.Column('steps', sa.Text(), nullable=False),
    sa.Column('expected_result', sa.Text(), nullable=False),
    sa.Column('test_type', sa.Enum('MANUAL', 'AUTOMATED', 'HYBRID', name='testcasetype'), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='priority'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_cases_id'), 'test_cases', ['id'], unique=False)
    op.create_table('test_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_plans_id'), 'test_plans', ['id'], unique=False)
    op.create_table('test_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PASSED', 'FAILED', 'SKIPPED', 'PENDING', 'BLOCKED', name='teststatus'), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('executed_by', sa.String(length=255), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('test_plan_id', sa.Integer(), nullable=True),
    sa.Column('test_case_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['test_plan_id'], ['test_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_executions_id'), 'test_executions', ['id'], unique=False)
    op.create_table('jira_integrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jira_project_key', sa.String(length=50), nullable=False),
    sa.Column('jira_issue_key', sa.String(length=50), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=True),
    sa.Column('test_execution_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['test_execution_id'], ['test_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jira_integrations_id'), 'jira_integrations', ['id'], unique=False)
    op.create_table('test_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('step_description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PASSED', 'FAILED', 'SKIPPED', 'PENDING', 'BLOCKED', name='teststatus'), nullable=False),
    sa.Column('screenshot_url', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('test_execution_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_execution_id'], ['test_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_results_id'), 'test_results', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_results_id'), table_name='test_results')
    op.drop_table('test_results')
    op.drop_index(op.f('ix_jira_integrations_id'), table_name='jira_integrations')
    op.drop_table('jira_integrations')
    op.drop_index(op.f('ix_test_executions_id'), table_name='test_executions')
    op.drop_table('test_executions')
    op.drop_index(op.f('ix_test_plans_id'), table_name='test_plans')
    op.drop_table('test_plans')
    op.drop_index(op.f('ix_test_cases_id'), table_name='test_cases')
    op.drop_table('test_cases')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    # ### end Alembic commands ###
